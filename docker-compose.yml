version: '3.4'

services:
  imagehub.api:
    image: imagehubapi
    container_name: Api
    build:
      context: .
      dockerfile: src\ImageHub.Api\Dockerfile
    ports:
     - "5000:5000"
     - "5001:5001"
    depends_on:
      imagehub.database:
        condition: service_healthy
        restart: true
      imagehub.rabbitmq:
        condition: service_healthy
        restart: true
  imagehub.database:
    image: postgres:15
    restart: always
    container_name: Database
    environment:
      - POSTGRES_DB=imagehub-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "mydatabase", "-U", "myuser"]
      interval: 5s
      timeout: 3s
      retries: 3
  imagehub.rabbitmq:
    image: rabbitmq:3-management
    container_name: Queue
    hostname: imagehub-queue
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - rabbitmqdata:/var/lib/rabbitmq
      - rabbitmqlog:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 3
  redis:
    image: redis:7
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass secret_password
    networks:
      - dashboardx_network
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
volumes:
  rabbitmqdata:
    driver: local
  rabbitmqlog:
    driver: local
  postgres:
    driver: local
